name: 01_Service_Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

  workflow_dispatch:
    branches: ["main", "develop"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install-build-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo 'install-build-test'
      
  release-to-development:
    if: github.ref == 'refs/heads/develop'
    needs: install-build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: development
    steps:
      - name: Set ENV name for Sentry
        run: echo "SENTRY_ENV_NAME=development" >> "$GITHUB_ENV"

  release-to-staging:
    if: github.ref == 'refs/heads/main'
    needs: install-build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: staging
    steps:
      - name: Set ENV name for Sentry
        run: echo "SENTRY_ENV_NAME=staging" >> "$GITHUB_ENV"

  create-sentry-release:
    if: var.SENTRY_ENV_NAME == development || var.SENTRY_ENV_NAME == staging
    runs-on: ubuntu-latest
    needs: check-success
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: $SENTRY_ENV_NAME