name: 01_Service_Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

  workflow_dispatch:
    branches: ["main", "develop"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install-build-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo 'install-build-test'
      
  release-to-development:
    if: github.ref == 'refs/heads/develop'
    needs: install-build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: development
    steps:
      - run: echo 'release-to-development'

  release-to-staging:
    if: github.ref == 'refs/heads/main'
    needs: install-build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: staging
    steps:
      - run: echo 'release-to-staging'

  create-sentry-release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - release-to-development
      - release-to-staging
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Sentry release
        if: always() && needs.release-to-development.result == 'success' || needs.release-to-staging.result == 'success'
        # uses: getsentry/action-release@v1
        # env:
        #   SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        #   SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        #   SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        # with:
        #   environment: $SENTRY_ENV_NAME
        run: echo 'getsentry/action-release@v1'